name: Python virtualenv
description: Set up a Python virtual environment with caching
inputs:
  python-version:
    description: The Python version to use
    required: true
  cache-prefix:
    description: Update this to invalidate the cache
    required: true
    default: v0
runs:
  using: composite
  steps:
    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ inputs.python-version }}

    - name: Install prerequisites
      shell: bash
      run: |
        pip install --upgrade pip setuptools wheel virtualenv

    - name: Set build variables
      shell: bash
      run: |
        # Get the exact Python version to use in the cache key.
        echo "PYTHON_VERSION=$(python --version)" >> $GITHUB_ENV

    - uses: actions/cache@v2
      id: virtualenv-cache
      with:
        path: .venv
        key: ${{ inputs.cache-prefix }}-${{ runner.os }}-${{ env.PYTHON_VERSION }}-${{ hashFiles('requirements.txt', 'dev-requirements.txt') }}

    - name: Setup virtual environment (no cache hit)
      if: steps.virtualenv-cache.outputs.cache-hit != 'true'
      shell: bash
      run: |
        test -d .venv || virtualenv -p $(which python) --copies --reset-app-data .venv
        . .venv/bin/activate
        pip install -e .[dev]

    - name: Install editable (cache hit)
      if: steps.virtualenv-cache.outputs.cache-hit == 'true'
      shell: bash
      run: |
        . .venv/bin/activate
        pip install --no-deps -e .[dev]
